{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { summarizeRiskFactors } from '@/ai/flows/summarize-risk-factors';\nimport type { SentinelReportData } from '@/types';\nimport { exec } from 'child_process';\nimport { promisify } from 'util';\n\n// Promisify the exec function to use it with async/await\nconst execPromise = promisify(exec);\n\nexport interface FormState {\n  report: SentinelReportData | null;\n  error: string | null;\n}\n\nconst TokenSchema = z.string().min(32, { message: 'Invalid Solana address.' }).max(44, { message: 'Invalid Solana address.' });\n\n/**\n * Fetches on-chain token data from the Helius API.\n * @param tokenAddress The Solana token address.\n * @returns A promise that resolves to the on-chain analysis data.\n */\nasync function fetchOnChainData(tokenAddress: string) {\n  const HELIUS_API_KEY = process.env.HELIUS_API_KEY;\n  if (!HELIUS_API_KEY) {\n    throw new Error(\"Helius API key is not configured in environment variables.\");\n  }\n  const url = `https://mainnet.helius-rpc.com/?api-key=${HELIUS_API_KEY}`;\n\n  try {\n    const [assetResponse, largestAccountsResponse, tokenSupplyResponse] = await Promise.all([\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 'solana-sentinel-asset',\n          method: 'getAsset',\n          params: { id: tokenAddress },\n        }),\n      }),\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 'solana-sentinel-holders',\n          method: 'getTokenLargestAccounts',\n          params: [tokenAddress],\n        }),\n      }),\n       fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 'solana-sentinel-supply',\n          method: 'getTokenSupply',\n          params: [tokenAddress],\n        }),\n      })\n    ]);\n\n    if (!assetResponse.ok || !largestAccountsResponse.ok || !tokenSupplyResponse.ok) {\n        const errorBody = await assetResponse.text();\n        console.error(\"Helius API Error Body:\", errorBody);\n        throw new Error(`Helius API call failed with status ${assetResponse.status}`);\n    }\n\n    const assetData = await assetResponse.json();\n    const largestAccountsData = await largestAccountsResponse.json();\n    const tokenSupplyData = await tokenSupplyResponse.json();\n\n    if (assetData.error || largestAccountsData.error || tokenSupplyData.error) {\n        throw new Error(`Helius API returned an error: ${assetData.error?.message || largestAccountsData.error?.message || tokenSupplyData.error?.message}`);\n    }\n\n    // --- Data Parsing Logic ---\n    const { result: assetResult } = assetData;\n    const { result: largestAccountsResult } = largestAccountsData;\n    const { result: tokenSupplyResult } = tokenSupplyData;\n    \n    // 1. Basic Info & Authorities\n    const tokenName = assetResult.content?.metadata?.name || 'Unknown Token';\n    const tokenSymbol = assetResult.content?.metadata?.symbol || '???';\n    const mintAuthorityRenounced = assetResult.ownership?.mint_authority === null;\n    const freezeAuthorityRenounced = assetResult.ownership?.freeze_authority === null;\n\n    // 2. Holder Concentration\n    let top10HolderConcentrationPercent = 0;\n    const totalSupply = parseFloat(tokenSupplyResult.value.amount);\n    if (totalSupply > 0 && largestAccountsResult.value.length > 0) {\n        const top10Holders = largestAccountsResult.value.slice(0, 10);\n        const top10Supply = top10Holders.reduce((acc: number, holder: any) => acc + parseFloat(holder.amount), 0);\n        top10HolderConcentrationPercent = (top10Supply / totalSupply) * 100;\n    }\n    \n    // 3. Deployer LP Holdings (Placeholder)\n    // TODO: This is a highly complex calculation that requires analyzing transaction history\n    // to find the original liquidity provision transaction from the deployer.\n    // For now, we use a random value as a placeholder.\n    const deployerLpConcentrationPercent = Math.random() * 40; // 0% to 40%\n\n    return {\n      tokenName,\n      tokenSymbol,\n      mintAuthorityRenounced,\n      freezeAuthorityRenounced,\n      top10HolderConcentrationPercent,\n      deployerLpConcentrationPercent,\n    };\n\n  } catch (error) {\n    console.error(\"Error fetching from Helius:\", error);\n    if (error instanceof Error) {\n        throw new Error(`Failed to fetch on-chain data from Helius: ${error.message}`);\n    }\n    throw new Error(\"An unknown error occurred while fetching from Helius.\");\n  }\n}\n\n/**\n * Triggers a sentiment analysis job on the Nosana Network.\n * @param tokenSymbol The token symbol to analyze.\n * @returns A promise that resolves to the sentiment analysis results.\n */\nasync function fetchSentimentAnalysis(tokenSymbol: string) {\n  const NOSANA_JOB_ID = process.env.NOSANA_JOB_ID;\n  if (!NOSANA_JOB_ID || NOSANA_JOB_ID === 'your-sentiment-job-id') {\n      console.warn(\"Nosana Job ID is not configured. Falling back to mock sentiment data.\");\n      return generateMockSentiment();\n  }\n  \n  try {\n    // 1. Trigger the job.\n    const runCommand = `nosana job run --input '{\"symbol\": \"${tokenSymbol}\"}' ${NOSANA_JOB_ID}`;\n    console.log(`Executing Nosana command: ${runCommand}`);\n    const { stdout: runStdout } = await execPromise(runCommand);\n    const runResult = JSON.parse(runStdout);\n    const jobId = runResult.job.id;\n    console.log(`Started Nosana job with ID: ${jobId}`);\n\n    // 2. Poll for the result. This is a simplified polling mechanism.\n    let jobResult;\n    for (let i = 0; i < 15; i++) { // Poll up to 15 times (75 seconds)\n      await new Promise(resolve => setTimeout(resolve, 5000)); // Wait 5s\n      const resultCommand = `nosana job result ${jobId}`;\n      console.log(`Polling for result with command: ${resultCommand}`);\n      const { stdout: resultStdout } = await execPromise(resultCommand);\n      const parsedResult = JSON.parse(resultStdout);\n      if (parsedResult.job.state === 'Completed') {\n        // The result from the Nosana job is often a stringified JSON in stdout,\n        // so it might need to be parsed twice.\n        jobResult = JSON.parse(parsedResult.result.stdout); \n        console.log(\"Nosana job completed.\", jobResult);\n        break;\n      }\n    }\n\n    if (!jobResult) {\n      throw new Error(\"Nosana job did not complete in time.\");\n    }\n    \n    // --- Data Parsing Logic ---\n    // Assumes your Nosana job returns an object like:\n    // { \"compound\": 0.88, \"summary\": \"Overwhelmingly Positive\" }\n    return { \n        compoundScore: jobResult.compound, \n        humanReadableSummary: jobResult.summary \n    };\n    \n  } catch (error) {\n    console.warn(\"Could not execute Nosana CLI. This may be because it is not installed or configured. Falling back to mock sentiment data.\", error);\n    return generateMockSentiment();\n  }\n}\n\nasync function generateMockSentiment() {\n    await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\n    \n    const sentimentScore = Math.random() * 2 - 1; // -1 to 1\n    let humanReadableSummary: string;\n    if (sentimentScore > 0.6) {\n      humanReadableSummary = 'Overwhelmingly Positive';\n    } else if (sentimentScore > 0.2) {\n      humanReadableSummary = 'Positive';\n    } else if (sentimentScore < -0.6) {\n      humanReadableSummary = 'Highly Negative';\n    } else if (sentimentScore < -0.2) {\n      humanReadableSummary = 'Negative';\n    } else {\n      humanReadableSummary = 'Mixed';\n    }\n\n    return {\n      compoundScore: sentimentScore,\n      humanReadableSummary,\n    };\n}\n\n\nexport async function analyzeToken(prevState: FormState, formData: FormData): Promise<FormState> {\n  const tokenAddress = formData.get('tokenAddress') as string;\n\n  const validation = TokenSchema.safeParse(tokenAddress);\n\n  if (!validation.success) {\n    return { report: null, error: validation.error.errors[0].message };\n  }\n\n  try {\n    // Step 1: Fetch live on-chain data from Helius\n    const onChainData = await fetchOnChainData(validation.data);\n\n    // Step 2: Trigger sentiment analysis on Nosana\n    const sentimentAnalysis = await fetchSentimentAnalysis(onChainData.tokenSymbol);\n\n    const onChainAnalysis = {\n        mintAuthorityRenounced: onChainData.mintAuthorityRenounced,\n        freezeAuthorityRenounced: onChainData.freezeAuthorityRenounced,\n        top10HolderConcentrationPercent: onChainData.top10HolderConcentrationPercent,\n        deployerLpConcentrationPercent: onChainData.deployerLpConcentrationPercent,\n    };\n    \n    // Step 3: Calculate the Holistic Score\n    let score = 100;\n    if (!onChainAnalysis.mintAuthorityRenounced) score -= 30;\n    if (!onChainAnalysis.freezeAuthorityRenounced) score -= 20;\n    if (onChainAnalysis.top10HolderConcentrationPercent > 40) score -= 25;\n    else if (onChainAnalysis.top10HolderConcentrationPercent > 20) score -= 15;\n    if (onChainAnalysis.deployerLpConcentrationPercent > 20) score -= 20;\n    \n    if(sentimentAnalysis.humanReadableSummary.includes('Negative')) score -= 20;\n    if(sentimentAnalysis.humanReadableSummary.includes('Positive')) score += 5;\n\n    const sentinelScore = Math.max(0, Math.min(100, Math.round(score)));\n\n    // Step 4: Generate the AI Summary\n    const aiInput = {\n      tokenName: onChainData.tokenName,\n      tokenSymbol: onChainData.tokenSymbol,\n      sentinelScore: sentinelScore,\n      onChainMetrics: onChainAnalysis,\n      sentimentAnalysis: sentimentAnalysis,\n    };\n    const aiResult = await summarizeRiskFactors(aiInput);\n    \n    // Step 5: Assemble the final report\n    const report: SentinelReportData = {\n      tokenAddress: validation.data,\n      tokenName: aiInput.tokenName,\n      tokenSymbol: aiInput.tokenSymbol,\n      sentinelScore,\n      aiAnalysis: aiResult,\n      onChainAnalysis,\n      sentimentAnalysis,\n    };\n\n    return { report, error: null };\n  } catch (e: any) {\n    console.error(e);\n    return { report: null, error: e.message || 'An unexpected error occurred during analysis.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA0MsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/token-form.tsx"],"sourcesContent":["'use client';\n\nimport { useFormStatus } from 'react-dom';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Search, Loader2 } from 'lucide-react';\n\ninterface TokenFormProps {\n  tokenAddress: string;\n  setTokenAddress: (address: string) => void;\n}\n\nexport function TokenForm({ tokenAddress, setTokenAddress }: TokenFormProps) {\n  const { pending } = useFormStatus();\n\n  return (\n    <div className=\"flex flex-col sm:flex-row items-center gap-4\">\n      <Input\n        name=\"tokenAddress\"\n        type=\"text\"\n        placeholder=\"Enter a Solana Token Mint Address (e.g., JUP...)\"\n        required\n        disabled={pending}\n        className=\"flex-grow text-base\"\n        aria-label=\"Solana Token Address\"\n        value={tokenAddress}\n        onChange={(e) => setTokenAddress(e.target.value)}\n      />\n      <Button type=\"submit\" disabled={pending} className=\"w-full sm:w-auto\" size=\"lg\">\n        {pending ? (\n          <>\n            <Loader2 className=\"animate-spin\" />\n            Analyzing...\n          </>\n        ) : (\n          <>\n            <Search />\n            Analyze\n          </>\n        )}\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AALA;;;;;;AAYO,SAAS,UAAU,EAAE,YAAY,EAAE,eAAe,EAAkB;IACzE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4MAAA,CAAA,gBAAa,AAAD;IAEhC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,iIAAA,CAAA,QAAK;gBACJ,MAAK;gBACL,MAAK;gBACL,aAAY;gBACZ,QAAQ;gBACR,UAAU;gBACV,WAAU;gBACV,cAAW;gBACX,OAAO;gBACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;0BAEjD,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAK;gBAAS,UAAU;gBAAS,WAAU;gBAAmB,MAAK;0BACxE,wBACC;;sCACE,8OAAC,iNAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;wBAAiB;;iDAItC;;sCACE,8OAAC,sMAAA,CAAA,SAAM;;;;;wBAAG;;;;;;;;;;;;;;AAOtB","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/score-display.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport function ScoreDisplay({ score }: { score: number }) {\n  const [displayScore, setDisplayScore] = useState(0);\n\n  const getRiskColor = (s: number) => {\n    if (s < 40) return 'text-risk-high';\n    if (s < 70) return 'text-risk-medium';\n    return 'text-risk-low';\n  };\n  \n  const getRiskBgColor = (s: number) => {\n    if (s < 40) return 'bg-risk-high/10';\n    if (s < 70) return 'bg-risk-medium/10';\n    return 'bg-risk-low/10';\n  }\n\n  const riskColor = getRiskColor(score);\n  const riskBgColor = getRiskBgColor(score);\n  const radius = 52;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference - (displayScore / 100) * circumference;\n\n  useEffect(() => {\n    let animationFrameId: number;\n    const startTime = Date.now();\n    const duration = 1500; // Animate over 1.5 seconds\n\n    const animate = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const currentScore = Math.floor(progress * score);\n      \n      setDisplayScore(currentScore);\n\n      if (progress < 1) {\n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrameId = requestAnimationFrame(animate);\n\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [score]);\n\n  return (\n    <div className=\"relative h-40 w-40\" aria-label={`Sentinel Score: ${score} out of 100`}>\n      <style>{`\n        .text-risk-high { color: hsl(0 50% 55%); }\n        .text-risk-medium { color: hsl(30 65% 52%); }\n        .text-risk-low { color: hsl(120 34% 43%); }\n        .bg-risk-high\\\\/10 { background-color: hsla(0, 50%, 55%, 0.1); }\n        .bg-risk-medium\\\\/10 { background-color: hsla(30, 65%, 52%, 0.1); }\n        .bg-risk-low\\\\/10 { background-color: hsla(120, 34%, 43%, 0.1); }\n      `}</style>\n      <svg className=\"h-full w-full\" viewBox=\"0 0 120 120\">\n        <circle\n          className=\"text-border/50\"\n          strokeWidth=\"10\"\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          r={radius}\n          cx=\"60\"\n          cy=\"60\"\n        />\n        <circle\n          className={cn('transition-colors duration-500', riskColor)}\n          strokeWidth=\"10\"\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          strokeLinecap=\"round\"\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          r={radius}\n          cx=\"60\"\n          cy=\"60\"\n          transform=\"rotate(-90 60 60)\"\n          style={{ transition: 'stroke-dashoffset 0.5s ease-out' }}\n        />\n      </svg>\n      <div\n        className={cn(\n            'absolute inset-0 flex flex-col items-center justify-center rounded-full transition-colors duration-500',\n            riskBgColor\n            )}\n        >\n        <span className={cn('text-5xl font-bold tracking-tight', riskColor)}>\n          {displayScore}\n        </span>\n        <span className=\"text-sm font-medium text-muted-foreground\">Score</span>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,aAAa,EAAE,KAAK,EAAqB;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe,CAAC;QACpB,IAAI,IAAI,IAAI,OAAO;QACnB,IAAI,IAAI,IAAI,OAAO;QACnB,OAAO;IACT;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,IAAI,IAAI,OAAO;QACnB,IAAI,IAAI,IAAI,OAAO;QACnB,OAAO;IACT;IAEA,MAAM,YAAY,aAAa;IAC/B,MAAM,cAAc,eAAe;IACnC,MAAM,SAAS;IACf,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,SAAS,gBAAgB,AAAC,eAAe,MAAO;IAEtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;QACJ,MAAM,YAAY,KAAK,GAAG;QAC1B,MAAM,WAAW,MAAM,2BAA2B;QAElD,MAAM,UAAU;YACd,MAAM,UAAU,KAAK,GAAG,KAAK;YAC7B,MAAM,WAAW,KAAK,GAAG,CAAC,UAAU,UAAU;YAC9C,MAAM,eAAe,KAAK,KAAK,CAAC,WAAW;YAE3C,gBAAgB;YAEhB,IAAI,WAAW,GAAG;gBAChB,mBAAmB,sBAAsB;YAC3C;QACF;QAEA,mBAAmB,sBAAsB;QAEzC,OAAO,IAAM,qBAAqB;IACpC,GAAG;QAAC;KAAM;IAEV,qBACE,8OAAC;QAAI,WAAU;QAAqB,cAAY,CAAC,gBAAgB,EAAE,MAAM,WAAW,CAAC;;0BACnF,8OAAC;0BAAO,CAAC;;;;;;;MAOT,CAAC;;;;;;0BACD,8OAAC;gBAAI,WAAU;gBAAgB,SAAQ;;kCACrC,8OAAC;wBACC,WAAU;wBACV,aAAY;wBACZ,QAAO;wBACP,MAAK;wBACL,GAAG;wBACH,IAAG;wBACH,IAAG;;;;;;kCAEL,8OAAC;wBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kCAAkC;wBAChD,aAAY;wBACZ,iBAAiB;wBACjB,kBAAkB;wBAClB,eAAc;wBACd,QAAO;wBACP,MAAK;wBACL,GAAG;wBACH,IAAG;wBACH,IAAG;wBACH,WAAU;wBACV,OAAO;4BAAE,YAAY;wBAAkC;;;;;;;;;;;;0BAG3D,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,0GACA;;kCAGJ,8OAAC;wBAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;kCACtD;;;;;;kCAEH,8OAAC;wBAAK,WAAU;kCAA4C;;;;;;;;;;;;;;;;;;AAIpE","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sentinel-report.tsx"],"sourcesContent":["'use client';\n\nimport type { SentinelReportData } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { ScoreDisplay } from './score-display';\nimport { Bot, BarChart4, Smile, BadgeCheck, BadgeAlert } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\n\nexport function SentinelReport({ report }: { report: SentinelReportData }) {\n  const { sentinelScore, tokenName, tokenSymbol, aiAnalysis, onChainAnalysis, sentimentAnalysis, tokenAddress } = report;\n\n  const riskLevel = aiAnalysis.riskLevel;\n\n  const getRiskColorClass = (risk: 'Low' | 'Medium' | 'High') => ({\n    Low: 'text-risk-low',\n    Medium: 'text-risk-medium',\n    High: 'text-risk-high',\n  }[risk]);\n  \n  const getRiskSpecificClasses = (risk: 'Low' | 'Medium' | 'High') => {\n    switch (risk) {\n        case 'Low':\n            return 'bg-risk-low/10 border-risk-low text-risk-low';\n        case 'Medium':\n            return 'bg-risk-medium/10 border-risk-medium text-risk-medium';\n        case 'High':\n            return 'bg-risk-high/10 border-risk-high text-risk-high';\n    }\n  }\n\n  const MetricRow = ({ label, children }: { label: string; children: React.ReactNode }) => (\n    <div className=\"flex justify-between items-center py-2.5\">\n      <p className=\"text-sm text-muted-foreground\">{label}</p>\n      <div className=\"text-sm font-semibold text-right\">{children}</div>\n    </div>\n  );\n\n  return (\n    <Card className=\"shadow-lg animate-in fade-in duration-500\">\n       <style>{`\n        .text-risk-high { color: hsl(0 50% 55%); }\n        .text-risk-medium { color: hsl(30 65% 52%); }\n        .text-risk-low { color: hsl(120 34% 43%); }\n        .bg-risk-high\\\\/10 { background-color: hsla(0, 50%, 55%, 0.1); }\n        .bg-risk-medium\\\\/10 { background-color: hsla(30, 65%, 52%, 0.1); }\n        .bg-risk-low\\\\/10 { background-color: hsla(120, 34%, 43%, 0.1); }\n        .border-risk-high { border-color: hsl(0 50% 55%); }\n        .border-risk-medium { border-color: hsl(30 65% 52%); }\n        .border-risk-low { border-color: hsl(120 34% 43%); }\n      `}</style>\n      <CardHeader>\n        <div className=\"flex flex-col md:flex-row md:items-start md:justify-between gap-4\">\n          <div>\n            <CardTitle className=\"text-2xl\">Sentinel Report: {tokenName} ({tokenSymbol})</CardTitle>\n            <CardDescription className=\"font-mono text-sm break-all\">{tokenAddress}</CardDescription>\n          </div>\n          <Badge \n            className={cn(\n              'text-base font-bold uppercase tracking-wider border-2 px-4 py-1.5', \n              getRiskSpecificClasses(riskLevel)\n            )}\n            variant=\"outline\"\n          >\n            {riskLevel} Risk\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 items-center bg-card-foreground/5 p-6 rounded-lg\">\n          <div className=\"md:col-span-1 flex justify-center\">\n            <ScoreDisplay score={sentinelScore} />\n          </div>\n          <div className=\"md:col-span-2 space-y-3\">\n            <h3 className=\"flex items-center gap-2 text-xl font-semibold text-primary\">\n              <Bot />\n              Final Verdict\n            </h3>\n            <p className=\"text-foreground/80 leading-relaxed\">\n              {aiAnalysis.finalVerdict}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-6\">\n            <div className=\"space-y-1\">\n                <h3 className=\"text-lg font-semibold mb-2 flex items-center gap-2 text-primary\"><BarChart4 />On-Chain Forensics</h3>\n                <Separator />\n                 <MetricRow label=\"Mint Authority\">\n                    {onChainAnalysis.mintAuthorityRenounced ? (\n                      <div className=\"flex items-center gap-2 text-risk-low\"><BadgeCheck className=\"h-4 w-4\" /> <span>Renounced</span></div>\n                    ) : (\n                      <div className=\"flex items-center gap-2 text-risk-high\"><BadgeAlert className=\"h-4 w-4\" /> <span>Active</span></div>\n                    )}\n                 </MetricRow>\n                 <Separator />\n                 <MetricRow label=\"Freeze Authority\">\n                    {onChainAnalysis.freezeAuthorityRenounced ? (\n                       <div className=\"flex items-center gap-2 text-risk-low\"><BadgeCheck className=\"h-4 w-4\" /> <span>Renounced</span></div>\n                    ) : (\n                       <div className=\"flex items-center gap-2 text-risk-high\"><BadgeAlert className=\"h-4 w-4\" /> <span>Active</span></div>\n                    )}\n                  </MetricRow>\n                  <Separator />\n                   <MetricRow label=\"Top 10 Holder Concentration\">\n                      <div className=\"flex items-center gap-3\">\n                          <span>{`${onChainAnalysis.top10HolderConcentrationPercent.toFixed(1)}%`}</span>\n                          <Badge variant=\"outline\" className={cn(getRiskColorClass(aiAnalysis.onChainRisk.holderConcentrationRisk), 'border-current font-semibold')}>{aiAnalysis.onChainRisk.holderConcentrationRisk}</Badge>\n                      </div>\n                   </MetricRow>\n                   <Separator />\n                  <MetricRow label=\"Deployer LP Holdings\">\n                       <div className=\"flex items-center gap-3\">\n                          <span>{`${onChainAnalysis.deployerLpConcentrationPercent.toFixed(1)}%`}</span>\n                          <Badge variant=\"outline\" className={cn(getRiskColorClass(aiAnalysis.onChainRisk.deployerLpHoldingsRisk), 'border-current font-semibold')}>{aiAnalysis.onChainRisk.deployerLpHoldingsRisk}</Badge>\n                      </div>\n                  </MetricRow>\n            </div>\n             <div className=\"space-y-1\">\n                <h3 className=\"text-lg font-semibold mb-2 flex items-center gap-2 text-primary\"><Smile />AI Sentiment Analysis</h3>\n                <Separator />\n                 <MetricRow label=\"Community Sentiment\">\n                   <span>{sentimentAnalysis.humanReadableSummary}</span>\n                 </MetricRow>\n                 <Separator />\n                 <MetricRow label=\"Sentiment Score\">\n                    <span>{sentimentAnalysis.compoundScore.toFixed(2)}</span>\n                 </MetricRow>\n            </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 992, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logo.tsx"],"sourcesContent":["\nexport function Logo() {\n  return (\n    <div className=\"flex items-center justify-center gap-3\">\n        <svg className=\"h-10 w-10\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M12 2L3 5V11C3 16.55 6.84 21.74 12 23C17.16 21.74 21 16.55 21 11V5L12 2Z\" fill=\"#293B5F\"/>\n            <circle cx=\"11.5\" cy=\"11.5\" r=\"3\" stroke=\"#D68430\" strokeWidth=\"1.5\"/>\n            <path d=\"M13.5 13.5L16\" stroke=\"#D68430\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n        </svg>\n        <h1 className=\"text-4xl md:text-5xl font-bold tracking-tight bg-gradient-to-r from-primary to-slate-600 dark:to-slate-400 text-transparent bg-clip-text\">\n            The Solana Sentinel\n        </h1>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AACO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;gBAAY,SAAQ;gBAAY,MAAK;gBAAO,OAAM;;kCAC7D,8OAAC;wBAAK,GAAE;wBAA2E,MAAK;;;;;;kCACxF,8OAAC;wBAAO,IAAG;wBAAO,IAAG;wBAAO,GAAE;wBAAI,QAAO;wBAAU,aAAY;;;;;;kCAC/D,8OAAC;wBAAK,GAAE;wBAAgB,QAAO;wBAAU,aAAY;wBAAM,eAAc;;;;;;;;;;;;0BAE7E,8OAAC;gBAAG,WAAU;0BAA2I;;;;;;;;;;;;AAKjK","debugId":null}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/example-tokens.tsx"],"sourcesContent":["'use client';\n\nimport { Button } from \"@/components/ui/button\";\n\ninterface ExampleTokensProps {\n  setTokenAddress: (address: string) => void;\n}\n\nconst exampleTokens = [\n  { symbol: 'JUP', address: 'JUPyiwrYFCzaZinsc2xbebxCiifD95UqLhgChfJpSA' },\n  { symbol: 'WIF', address: 'EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzL7M6bMktdBCe' },\n  { symbol: 'BONK', address: 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263' }\n];\n\nexport function ExampleTokens({ setTokenAddress }: ExampleTokensProps) {\n  return (\n    <div className=\"mt-4 flex flex-wrap items-center justify-center gap-2\">\n      <p className=\"text-sm text-muted-foreground mr-2\">Try an example:</p>\n      {exampleTokens.map((token) => (\n        <Button\n          key={token.symbol}\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => setTokenAddress(token.address)}\n          className=\"font-mono\"\n        >\n          {token.symbol}\n        </Button>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQA,MAAM,gBAAgB;IACpB;QAAE,QAAQ;QAAO,SAAS;IAA6C;IACvE;QAAE,QAAQ;QAAO,SAAS;IAA+C;IACzE;QAAE,QAAQ;QAAQ,SAAS;IAA+C;CAC3E;AAEM,SAAS,cAAc,EAAE,eAAe,EAAsB;IACnE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAqC;;;;;;YACjD,cAAc,GAAG,CAAC,CAAC,sBAClB,8OAAC,kIAAA,CAAA,SAAM;oBAEL,SAAQ;oBACR,MAAK;oBACL,SAAS,IAAM,gBAAgB,MAAM,OAAO;oBAC5C,WAAU;8BAET,MAAM,MAAM;mBANR,MAAM,MAAM;;;;;;;;;;;AAW3B","debugId":null}},
    {"offset": {"line": 1185, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useActionState, useEffect, useState } from 'react';\nimport { analyzeToken, type FormState } from './actions';\nimport { TokenForm } from '@/components/token-form';\nimport { SentinelReport } from '@/components/sentinel-report';\nimport { Logo } from '@/components/logo';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\nimport { AlertTriangle } from 'lucide-react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { ExampleTokens } from '@/components/example-tokens';\n\nconst initialState: FormState = {\n  report: null,\n  error: null,\n};\n\nexport default function Home() {\n  const [state, formAction] = useActionState(analyzeToken, initialState);\n  const [tokenAddress, setTokenAddress] = useState('');\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (state.error) {\n      toast({\n        variant: 'destructive',\n        title: 'Analysis Failed',\n        description: state.error,\n      });\n    }\n  }, [state.error, toast]);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-background p-4 sm:p-6 md:p-8\">\n      <div className=\"w-full max-w-4xl space-y-8\">\n        <header className=\"text-center space-y-2\">\n          <Logo />\n          <p className=\"text-muted-foreground md:text-xl max-w-2xl mx-auto\">\n            Your AI-powered shield against risky tokens on the Solana blockchain.\n          </p>\n        </header>\n\n        <main>\n          <Card className=\"shadow-lg\">\n            <CardContent className=\"p-4 sm:p-6\">\n              <form action={formAction}>\n                <TokenForm tokenAddress={tokenAddress} setTokenAddress={setTokenAddress} />\n              </form>\n            </CardContent>\n          </Card>\n          \n          <ExampleTokens setTokenAddress={setTokenAddress} />\n\n          {state.report ? (\n            <div className=\"mt-8 animate-in fade-in duration-500\">\n              <SentinelReport report={state.report} />\n            </div>\n          ) : (\n             !state.error && (\n              <div className=\"mt-8\">\n                 <Alert>\n                  <AlertTriangle className=\"h-4 w-4\" />\n                  <AlertTitle>Welcome to The Sentinel</AlertTitle>\n                  <AlertDescription>\n                    Enter a Solana token mint address above to begin your analysis. This is the unique contract address for a token, not your personal wallet address. Try one of the examples below to see how it works.\n                  </AlertDescription>\n                </Alert>\n              </div>\n            )\n          )}\n        </main>\n        <footer className=\"text-center text-sm text-muted-foreground\">\n            <p>&copy; {new Date().getFullYear()} The Solana Sentinel. All rights reserved.</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;AAaA,MAAM,eAA0B;IAC9B,QAAQ;IACR,OAAO;AACT;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAAE,kJAAA,CAAA,eAAY,EAAE;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM,KAAK,EAAE;YACf,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa,MAAM,KAAK;YAC1B;QACF;IACF,GAAG;QAAC,MAAM,KAAK;QAAE;KAAM;IAEvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC,0HAAA,CAAA,OAAI;;;;;sCACL,8OAAC;4BAAE,WAAU;sCAAqD;;;;;;;;;;;;8BAKpE,8OAAC;;sCACC,8OAAC,gIAAA,CAAA,OAAI;4BAAC,WAAU;sCACd,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;oCAAK,QAAQ;8CACZ,cAAA,8OAAC,mIAAA,CAAA,YAAS;wCAAC,cAAc;wCAAc,iBAAiB;;;;;;;;;;;;;;;;;;;;;sCAK9D,8OAAC,uIAAA,CAAA,gBAAa;4BAAC,iBAAiB;;;;;;wBAE/B,MAAM,MAAM,iBACX,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,wIAAA,CAAA,iBAAc;gCAAC,QAAQ,MAAM,MAAM;;;;;;;;;;mCAGrC,CAAC,MAAM,KAAK,kBACX,8OAAC;4BAAI,WAAU;sCACZ,cAAA,8OAAC,iIAAA,CAAA,QAAK;;kDACL,8OAAC,wNAAA,CAAA,gBAAa;wCAAC,WAAU;;;;;;kDACzB,8OAAC,iIAAA,CAAA,aAAU;kDAAC;;;;;;kDACZ,8OAAC,iIAAA,CAAA,mBAAgB;kDAAC;;;;;;;;;;;;;;;;;;;;;;;8BAQ5B,8OAAC;oBAAO,WAAU;8BACd,cAAA,8OAAC;;4BAAE;4BAAQ,IAAI,OAAO,WAAW;4BAAG;;;;;;;;;;;;;;;;;;;;;;;AAKhD","debugId":null}}]
}